---
title: "Report 2021/2022"
execute: 
  echo: false
  warning: false
always_allow_html: true
format: 
  html:
    toc: true
    toc-depth: 2
---

```{r}

#| label: libraries

library(tidyverse)
library(ggpattern)
library(psych)
library(gt)
library(plotly)
library(janitor)
library(ggthemes)
library(rvg)




addvar<-function(data){
  data<-data%>%mutate(total5=d1+d2+d3+d4+d5,
         total_pc=total5/5,
         parta1_total=parta1_1+parta1_2+parta1_3,
         parta1_total_pc=parta1_total/3,
         parta2_total=parta2_1+parta2_2+parta2_3,
         parta2_total_pc=parta2_total/3, 
         parta3_total=parta3_1+parta3_2+parta3_3+parta3_4,
         parta3_total_pc=parta3_total/4,
         parta4_total=parta4_1+parta4_2+parta4_3+parta4_4+parta4_5,
         parta4_total_pc=parta4_total/ 5,
         parta5_total=parta5_1+parta5_2+parta5_3,
         parta5_total_pc=parta5_total/ 3
         )
}



```

```{r}
#| label: loading_files
#| message: false

data2021<-read_csv("data/AMF2021.csv")
data2021<-data2021[rowSums(is.na(data2021)) != ncol(data2021), ] 

data2022<-read_csv("data/AMF2022.csv")
data2022<-data2022[rowSums(is.na(data2022)) != ncol(data2022), ] 

#stats2021<-data2021
#total_cat<-as_vector(data_dic%>%distinct(subclass))

#names(stats2021) <- total_cat

  
 # data2022


#skimr::skim(data2022)
#describe(data2021)

#data2022 adjustment

data2021<-addvar(data2021)

data2022<-addvar(data2022)

data_dic<-read_csv("data/data_dic.csv")

#data_dic[7:21,1]

```


```{r}
#factor levels

data2021<-data2021%>%
  mutate(
     Sector=factor(Sector,levels=c("Government","Catholic", "Independent")),
     Type=factor(Type,levels=c("Primary","Secondary", "Combined")),
     SES=factor(SES,levels=c("Low","Medium", "High")),
     ADII=factor(ADII,levels=c("Below Average","Above Average")),
    Metro=factor(Metro,levels=c("Non-metro","Metro"))
  )

data2022<-data2022%>%
  mutate(
     Sector=factor(Sector,levels=c("Government","Catholic", "Independent")),
     Type=factor(Type,levels=c("Primary","Secondary", "Combined")),
     SES=factor(SES,levels=c("Low","Medium", "High")),
     ADII=factor(ADII,levels=c("Below Average","Above Average")),
    Metro=factor(Metro,levels=c("Non-metro","Metro"))
  )

#----colours setup
# ggplot use
colors_list_sector <- list(
  "Government" = "#3d83c2",
  "Catholic" = "#cf4648",
  "Independent" = "#93bc48"
)
#plot_ly use
cols_sector <- c("#3d83c2", "#cf4648", "#93bc48")

#-------
colors_list_type <- list(
  "Primary" = "#ff902c",
  "Secondary" = "#00aec9",
  "Combined" = "#8663a7"
)

cols_type <- c("#ff902c", "#00aec9", "#8663a7")

#----------------
colors_list_ADII <- list(
  "Below Average" = "#1B9E77",
  "Above Average" = "#D95F02"
)

colors_list_ADII <- list(
  "Below Average" = "#cbcbcb",
  "Above Average" = "#565656"
)

cols_ADII <- c("#cbcbcb", "#565656")
#----------------

colors_list_SES <- list(
  "Low" = "#e2a8a8",
  "Medium" = "#cf4648",
  "High" = "#ab393a"
)
cols_SES <- c("#e2a8a8", "#cf4648", "#ab393a")

cols_metro <- c("#755693","#ac9ac0")


```


## Acknowledgements

Friends, Romans, countrymen, lend me your ears; I come to bury Caesar, not to praise him. The evil that men do lives after them; The good is oft interred with their bones; So let it be with Caesar. The noble Brutus Hath told you Caesar was ambitious: If it were so, it was a grievous fault, And grievously hath Caesar answer'd it. Here, under leave of Brutus and the rest-- For Brutus is an honourable man; So are they all, all honourable men-- Come I to speak in Caesar's funeral. He was my friend, faithful and just to me: But Brutus says he was ambitious; And Brutus is an honourable man. He hath brought many captives home to Rome Whose ransoms did the general coffers fill: Did this in Caesar seem ambitious?

## Executive Summary

Friends, Romans, countrymen, lend me your ears; I come to bury Caesar, not to praise him. The evil that men do lives after them; The good is oft interred with their bones; So let it be with Caesar. The noble Brutus Hath told you Caesar was ambitious: If it were so, it was a grievous fault, And grievously hath Caesar answer'd it. Here, under leave of Brutus and the rest-- For Brutus is an honourable man; So are they all, all honourable men-- Come I to speak in Caesar's funeral. He was my friend, faithful and just to me: But Brutus says he was ambitious; And Brutus is an honourable man. He hath brought many captives home to Rome Whose ransoms did the general coffers fill: Did this in Caesar seem ambitious?

## Background

Friends, Romans, countrymen, lend me your ears; I come to bury Caesar, not to praise him. The evil that men do lives after them; The good is oft interred with their bones; So let it be with Caesar. The noble Brutus Hath told you Caesar was ambitious: If it were so, it was a grievous fault, And grievously hath Caesar answer'd it. Here, under leave of Brutus and the rest-- For Brutus is an honourable man; So are they all, all honourable men-- Come I to speak in Caesar's funeral. He was my friend, faithful and just to me: But Brutus says he was ambitious; And Brutus is an honourable man. He hath brought many captives home to Rome Whose ransoms did the general coffers fill: Did this in Caesar seem ambitious?## Aim

## Methodology

Quant: Compare results from all schools -- 2021 and 2022

Demographics of schools participating in the self-assessment tool (SAT): 2021 & 2022

Pie charts side-by-side: 2021 and 2022. Sector, Type, SES, ADII, Metro/non-metro; 2022 only: Engagement A (Low, High) and Engagement B (Low, Medium, High)


### 2021: Participants by sector
```{r}


#data2021_colour<-data2021
#data2021_colour$color <- dplyr::recode(data2021_colour$Sector, !!!colors_list_sector)


vals= count(data2021, Sector)

plot_ly(data=count(data2021, Sector), 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_sector),
  
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Sector data 2021")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))


```

### by Sector 2022

```{r}

vals= count(data2022, Sector)

plot_ly(data=vals, 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_sector),
  
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Sector data 2022")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))


```
### 2021 Participants by school type.
```{r}

#| label: fig2-type
#| fig-cap: Participants by school type.
#| warning: false

vals= count(data2021, Type)

plot_ly(data=count(data2021, Type), 
        labels = ~Type, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_type),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Type data 2021")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))
```
### 2022 Participants by school type.


```{r}

vals= count(data2022, Type)
vals$Type<=factor(vals$Type, levels=c("Primary","Secondary", "Combined"))

plot_ly(data=vals, 
        labels = ~Type, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_type),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Type data 2021")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))


#stopped with rounding

```

### Figure 3. 2021 Participants by SES

```{r}
### 2021 Participants by SES

vals= count(data2021, SES)

plot_ly(data=count(data2021, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_SES),
  text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="SES data 2021")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))

```

### 2022 Participants by SES

```{r}
### 2022 Participants by SES

vals= count(data2022, SES)

plot_ly(data=count(data2022, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_SES),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="SES data 2022")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))

```

### Figure 4. 2021 Participants by ADII

```{r}
### 2021 Participants by ADII

vals= count(data2021, ADII)

plot_ly(data=count(data2021, ADII), 
        labels = ~ADII, values = ~n, 
        sort = FALSE,
        type = 'pie',
  marker = list(colors = cols_ADII),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="ADII data 2021")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))

```
## Figure 4. 2022 Participants by ADII

```{r}
### 2022 Participants by ADII

vals= count(data2022, ADII)

vals<-vals%>% mutate(ADII = ifelse(is.na(ADII), "Unknown", paste(ADII)))

plot_ly(data=vals, 
        labels = ~ADII, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_ADII),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="ADII data 2022")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))

```


### Figure 5. 2021 Participants by location: metro / non-metro

```{r}
### 2021 Participants by metro / non-metro

vals= count(data2021, Metro)

plot_ly(data=vals, 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_metro),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Metro/non-metro data 2021")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))

```

### Figure 5. 2022 Participants by location: metro / non-metro

```{r}
### 2022 Participants by metro / non-metro

vals= count(data2022, Metro)

plot_ly(data=vals, 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_metro),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Metro/non-metro data 2022")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))

```


Figure 6. Participants by DET region N/A Figure 7. Participants by eSmart status N/A

Figure 8. Part A: average (median) number of eSmart action items completed by sector (out of 23)

#### Figure 8. 2021: average (median) number of eSmart action items completed by sector (out of 23)

```{r}
fig8<-data2021%>%
  select(Sector, parta_total)%>%
  add_row(Sector='All schools', parta_total=median(data2021$parta_total))

fig8$Sector = factor(fig8$Sector,levels=c("Government","Catholic", "Independent", "All schools"))

fig8%>%
  group_by(Sector)%>%
  summarise(n=median(parta_total))%>%
  ggplot(aes(x=Sector, y=n, fill=Sector))+
  geom_col(width = 0.5)+
  labs(title=" ",
        x =" ", y = " ")+
  theme(

    legend.position="none",
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

axis.title.y=element_blank(),
axis.text.y=element_blank(), 
axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
  scale_fill_manual(values=c('#3d83c2', '#cf4648', '#93bc48', '8b8b8b'))+
  scale_y_discrete(limits=c(0, 25), breaks=NULL)+
geom_text(aes(label = n), size = 3.5,
          vjust=-0.5)

```
#### Figure 8.  2022: average (median) number of eSmart action items completed by sector (out of 23)

```{r}

fig8<-data2022%>%
  select(Sector, parta_total)%>%
  add_row(Sector='All schools', parta_total=median(data2021$parta_total))

fig8$Sector = factor(fig8$Sector,levels=c("Government","Catholic", "Independent", "All schools"))

fig8%>%
  group_by(Sector)%>%
  summarise(n=median(parta_total))%>%
  ggplot(aes(x=Sector, y=n, fill=Sector))+
  geom_col(width = 0.5)+
  labs(title=" ",
        x =" ", y = " ")+
  theme(

    legend.position="none",
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

axis.title.y=element_blank(),
axis.text.y=element_blank(), 
axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
  scale_fill_manual(values=c('#3d83c2', '#cf4648', '#93bc48', '8b8b8b'))+
  scale_y_discrete(breaks=NULL)+
geom_text(aes(label = n), size = 3.5,
          vjust=-0.5)

```

Figure 9. Part A: number of eSmart action items achieved (out of 23) by sector

**NOTE** combining two years makes this chart really messy, especially with 6 different colour/patterns combinations and scales in the original report

### Figure 9. 2021 Part A: number of eSmart action items achieved (out of 23) by sector
```{r}

fig9<-data2021%>%
  count(Sector, parta_total)


fig9%>%
  ggplot(aes(parta_total, n, fill=fct_rev(Sector)))+
  geom_col(width=0.5)+
    labs(title="2021: Part A: number of eSmart action items achieved (out of 23) by sector)",
        x ="Number of eSmart action items achieved", y = " Number of schools")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
  scale_fill_manual(values=colors_list_sector)+
  scale_y_continuous(limits = c(0, 9), breaks = seq(0, 9, 1))+
  scale_x_continuous(limits = c(0, 23.5), breaks = seq(0, 23, 1))+
  geom_text(aes(label = n),
              position = position_stack(vjust = .5))
#   stat_count(aes(y=..count..,label=..count..), geom="text",vjust=2)

```
### Figure 9. 2022 Part A: number of eSmart action items achieved (out of 23) by sector
```{r}

fig9<-data2022%>%
  count(Sector, parta_total)


fig9%>%
  ggplot(aes(parta_total, n, fill=fct_rev(Sector)))+
  geom_col(width=0.5)+
    labs(title="2022: Part A: number of eSmart action items achieved (out of 23) by sector)",
        x ="Number of eSmart action items achieved", y = " Number of schools")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
  scale_fill_manual(values=colors_list_sector)+
  scale_y_continuous(limits = c(0, 2), breaks = seq(0, 2, 1))+
  scale_x_continuous(limits = c(0, 23.5), breaks = seq(0, 23, 1))+
  geom_text(aes(label = n),
              position = position_stack(vjust = .5))

```

Figure 10. Part A: average (mean) completion of eSmart action items - all schools by Domain



```{r}

#----- Part A and Part B setup

part_a_categories<-as_vector(data_dic%>%
  filter(class=="PART A")%>%
  distinct(subclass)
  )
  
figa_categories<-append(c(
  "School",
  "Sector",
  "Type",
  "SES",
  "ADII",
  "Metro"
),part_a_categories)

#-----2021 - Part A

temp2021_a<-data2021%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total)

names(temp2021_a) <- figa_categories

temp2021_f10<-temp2021_a%>%mutate(
  across(
    c(7:12),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:12))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2021")

#-----2022 - Part A

temp2022_a<-data2022%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total)

names(temp2022_a) <- figa_categories

temp2022_f10<-temp2022_a%>%mutate(
  across(
    c(7:12),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:12))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2022")

temp_f10<-rbind(temp2021_f10, temp2022_f10)

# reorder factor

temp_f10$Categories<-factor(temp_f10$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))

```

```{r}
#part B
part_b_categories<-as_vector(data_dic%>%
  filter(class=="PART B")%>%
  distinct(subclass)
  )

figb_categories<-append(c(
  "School",
  "Sector",
  "Type",
  "SES",
  "ADII",
  "Metro"
),part_b_categories)

#-----2021 - Part B

temp2021_b<-data2021%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor)

names(temp2021_b) <- figb_categories

temp2021_b<-temp2021_b[rowSums(is.na(temp2021_b[7:18])) != ncol(temp2021_b[7:18]), ] 


temp2021_b[1:2, 7:16]

temp2021_f13n<-temp2021_b%>%mutate(
  across(
    c(7:16),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:11))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2021")

#-----2022 - Part B

temp2022_b<-data2022%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor)

names(temp2022_b) <- figb_categories

temp2022_b<-temp2022_b[rowSums(is.na(temp2022_b[7:18])) != ncol(temp2022_b[7:18]), ] 

temp2022_f13n<-temp2022_b%>%mutate(
  across(
    c(7:16),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:11))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2022")


temp_f13n<-rbind(temp2021_f13n, temp2022_f13n)
#
```
### 2021/2022 - Figure 10. Part A: average (mean) completion of eSmart action items - all schools by Domain

```{r}
#----- plot - part A

temp_f10%>%
  ggplot(aes(x=Categories, y= Mean*100, fill=year))+
  geom_col(stat="identity", position=position_dodge(), width = 0.5)+
labs(title="2021/2022: Part A: average (mean) completion of eSmart action items - all schools by Domain)",
        x =" ", y = " % assessed as completed")+
    scale_fill_grey(start = 0.8, end = 0.2)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+
geom_text(aes(label = paste0(round(Mean*100),"%")), 
          position=position_dodge(width=0.5), 
          size = 3,
          vjust=-0.5)


```

Figure 11. Part A: average (mean) completion of eSmart action items by Domain by sector

```{r}

temp2021_a$year<-"2021"
temp2022_a$year<-"2022"

temp<-rbind(temp2021_a, temp2022_a)



fig11<-temp%>%
  group_by(Sector, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  ungroup%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig11$Categories<-factor(fig11$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig11%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Sector)))+
  geom_col(stat="identity", position= "dodge2")+
labs(title="2021/2022: Part A: average (mean) completion of eSmart action items by Domain by sector",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
   scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(Sector), fill=fct_rev(Sector)), 
              position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75
              )+
  scale_fill_manual(values=colors_list_sector)+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")


```

### Figure 12. Part A: Average (mean) completion by Domain by SES.

**NOTE** I have to turn it as otherwise the text is too small or the chart is too messy

```{r}
fig12<-temp%>%
  group_by(SES, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(SES)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="2021/2022: Part A: Average (mean) completion by Domain by SES",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(SES), fill=fct_rev(SES)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=colors_list_SES)

```

### Figure 12. Part A: Average (mean) completion by Domain by Type

```{r}
fig12<-temp%>%
  group_by(Type, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Type)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="2021/2022: Part A: Average (mean) completion by Domain by Type",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(Type), fill=fct_rev(Type)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=colors_list_type)

```

### Figure 12. Part A: Average (mean) completion by Domain by ADII 


```{r}
fig12<-temp%>%
  group_by(ADII, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(ADII)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="2021/2022: Part A: Average (mean) completion by Domain by ADII",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(ADII), fill=fct_rev(ADII)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=colors_list_ADII)

```
### Figure 12. Part A: Average (mean) completion by Domain by Metro 


```{r}
fig12<-temp%>%
  group_by(Metro, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Metro)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="2021/2022: Part A: Average (mean) completion by Domain by ADII",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(Metro), fill=fct_rev(Metro)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=c("#755693","#ac9ac0"))

```

### engagement A and B


```{r}

#-----2022 - engagement

temp2022_eng<-data2022%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_engA_type,
total_engB_type)

temp2022_eng$total_engA_type<-factor(temp2022_eng$total_engA_type, levels=c("Low", "High"))
temp2022_eng$total_engB_type<-factor(temp2022_eng$total_engB_type, levels=c("Low", "Med", "High"))


temp2022_eng %>% ggplot(aes(x=total_engA_type, fill=total_engA_type))+
  geom_bar(width = 0.5)+
labs(title="2022: Engagement A: ",
        x =" ", y = " Number of schools")+
  #  scale_fill_manual(colors=colors_list_ADII)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
#  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+

temp2022_eng %>% ggplot(aes(x=total_engB_type, fill=total_engB_type))+
  geom_bar(width = 0.5)+
labs(title="2022: Engagement B: ",
        x =" ", y = " Number of schools")+
  #  scale_fill_manual(colors=colors_list_ADII)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
#  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+



```


```{r}
fig12<-temp%>%
  group_by(Metro, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Metro)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="2021/2022: Part A: Average (mean) completion by Domain by ADII",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(Metro), fill=fct_rev(Metro)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=c("#755693","#ac9ac0"))

```

### Figure 13. Part B: results by Focus Area - all schools

```{r}
#----- plot - part B

temp_f13n%>%
  ggplot(aes(x=Categories, y= Mean))+
  geom_col(width=0.5)+
  facet_wrap(vars(year))+
  facet_wrap(vars(year))+
    labs(title="2Part B: results by Focus Area - all schools",
        x =" ", y = " Score 0-80")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 7))+
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+
geom_text(aes(label = round(Mean)), 
          position=position_dodge(width=0.7), vjust=-0.5)



temp_f13n%>%
  ggplot(aes(x=Categories, y= Mean, fill=year))+
  geom_col(stat="identity", position=position_dodge(), width=0.5)+
    labs(title="2Part B: results by Focus Area - all schools",
        x =" ", y = " Score 0-80")+
    scale_fill_grey(start = 0.8,
  end = 0.2)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 20))+
geom_text(aes(label = round(Mean)), 
          position=position_dodge(width=0.5), 
                      size = 3,
          vjust=-0.5)

```

```{r}

temp2021_b$year<-"2021"
temp2022_b$year<-"2022"

temp_b<-rbind(temp2021_b, temp2022_b)

fig14<-temp_b%>%
  group_by(Sector, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

#----PLOT

fig14%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Sector)))+
  geom_col(stat="identity", position=position_dodge())+

      labs(title="Part B: results by Focus Area by sector",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+
  
    geom_text(aes(label = round(Mean), group = Sector, fill=fct_rev(Sector)), 
            hjust = -0.5,
             size = 3,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=colors_list_sector)+
    coord_flip()+
   facet_wrap(vars(year))


```

```{r}
fig15<-temp_b%>%
  group_by(SES, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

#----PLOT

fig15%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(SES)))+
  geom_col(stat="identity", position=position_dodge(), width=0.7)+
    coord_flip()+
  facet_wrap(vars(year))+
labs(title="2021/2022: Part B: results by Focus Area by SES",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+  
    geom_text(aes(label = round(Mean), group = SES, fill=fct_rev(SES)), 
            hjust = -0.5,
             size = 3,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=colors_list_SES)

```

### Figure 16. Part B: results by Focus Area by school type

```{r}
fig16<-temp_b%>%
  group_by(Type, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

#----PLOT

fig16%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Type)))+
  geom_col(stat="identity", position=position_dodge(), width=0.7)+
  coord_flip()+
  facet_wrap(vars(year))+
      labs(title="Part B: results by Focus Area by school type",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+  
    geom_text(aes(label = round(Mean), group = Type, fill=fct_rev(Type)), 
            hjust = -0.5,
             size = 2.7,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=colors_list_type)

```

### Figure 16. Part B: results by Focus Area by ADII

```{r}
fig16<-temp_b%>%
  group_by(ADII, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))%>%
  drop_na()

#----PLOT

fig16%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(ADII)))+
  geom_col(stat="identity", position=position_dodge(), width=0.7)+
  coord_flip()+
  facet_wrap(vars(year))+
      labs(title="Part B: results by Focus Area by ADII ",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+  
    geom_text(aes(label = round(Mean), group = ADII, fill=fct_rev(ADII)), 
            hjust = -0.5,
             size = 3,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=colors_list_ADII)

```


### Figure 16. Part B: results by Focus Area by metro

```{r}
fig16<-temp_b%>%
  group_by(Metro, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))%>%
  drop_na()

#----PLOT

fig16%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Metro)))+
  geom_col(stat="identity", position=position_dodge(), width=0.7)+
  coord_flip()+
  facet_wrap(vars(year))+
      labs(title="Part B: results by Focus Area by Metro ",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+  
    geom_text(aes(label = round(Mean), group = Metro, fill=fct_rev(Metro)), 
            hjust = -0.5,
             size = 3,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=c("#755693", "#ac9ac0"))

```

### Figure 17. Part B: progress in eSmart journey - all schools

2021 and 2022

```{r}
temp_b%>%
  drop_na(Descriptor)%>%
  mutate(Descriptor=factor(Descriptor,levels=c("Emerging","Building", "Flourishing")))%>%
  ggplot(aes(Descriptor, fill=year))+
  geom_bar(position=position_dodge(), width = 0.5)+
#  facet_wrap(vars(year))+
    labs(title=" ",
        x =" ", y = " Number of schools")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  stat_count(aes(y=..count..,label=..count..), 
             geom="text", 
             position=position_dodge(width=0.5), 
             size = 3,
             vjust=-0.5)+
  scale_fill_manual(values=c("#c2b4ce","#943ae8"))
  
  
  


```


## Engagement - 2022 data only


### by Sector 2022 - Engagement A data 2022

```{r}

vals= count(data2022, total_engA_type)

plot_ly(data=vals, 
        labels = ~total_engA_type, values = ~n, 
        type = 'pie',
  marker = list(colors = cols_sector),
  
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Engagement A data 2022")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))


```

### by Sector 2022 - Engagement B data 2022

```{r}

vals= count(data2022, total_engB_type)

plot_ly(data=vals, 
        labels = ~total_engB_type, values = ~n, 
        type = 'pie',
  marker = list(colors = cols_sector),
  
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Engagement B data 2022")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))


```
### old graphs

```{r}

part_eng_categories<-as_vector(data_dic%>%
  filter(grepl("Engagement", class, ignore.case = TRUE))%>%
  distinct(subclass)
  )

fig_eng_categories<-append(c(
  "School",
  "Sector",
  "Type",
  "SES",
  "ADII",
  "Metro"
), part_eng_categories)

#-----2022 - engagement

temp2022_eng<-data2022%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_engA_type,
total_engB_type)

temp2022_eng_low<-temp2022_eng%>%filter(total_engA_type=="Low")

```

### Engagement A (Low) - Type: 2022"

```{r}

#pie chart

plot_ly(data=count(temp2022_eng_low, Type), 
        labels = ~Type, values = ~n, 
        type = 'pie',
        name="Engagement A (Low) - Type: 2022",
                
        marker = list(colors = cols_type),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement A (Low) - Sector: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, Sector), 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        name="Engagement A (Low) - Sector: 2022",
                
        marker = list(colors = cols_sector),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```


### Engagement A (Low) - SES: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        name="Engagement A (Low) - SES: 2022",
                
        marker = list(colors = cols_SES),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement A (Low) - ADII: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, ADII), 
        labels = ~ADII, values = ~n, 
        type = 'pie',
        name="Engagement A (Low) - ADII: 2022",
                
        marker = list(colors = cols_ADII),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement A (Low) - Metro: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, Metro), 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        name="Engagement A (Low) - Metro: 2022",
                
        marker = list(colors = cols_metro),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

## Engagement A (High) 

```{r}
temp2022_eng_high<-temp2022_eng%>%filter(total_engA_type=="High")

```


### Engagement A (High) - Type: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, Type), 
        labels = ~Type, values = ~n, 
        type = 'pie',
        name="Engagement A (High) - Type: 2022",
                
        marker = list(colors = cols_type),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement A (High) - Sector: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, Sector), 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        name="Engagement A (High) - Sector: 2022",
                
        marker = list(colors = cols_sector),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```


### Engagement A (High) - SES: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        name="Engagement A (High) - SES: 2022",
                
        marker = list(colors = cols_SES),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement A (High) - ADII: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, ADII), 
        labels = ~ADII, values = ~n, 
        type = 'pie',
        name="Engagement A (High) - ADII: 2022",
                
        marker = list(colors = cols_ADII),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement A (High) - Metro: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, Metro), 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        name="Engagement A (High) - Metro: 2022",
                
        marker = list(colors = cols_metro),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```


## Engagement B
```{r}
temp2022_eng_low<-temp2022_eng%>%filter(total_engB_type=="Low")

```

### Engagement B (Low) - Type: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, Type), 
        labels = ~Type, values = ~n, 
        type = 'pie',
        name="Engagement B (Low) - Type: 2022",
                
        marker = list(colors = cols_type),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement B (Low) - Sector: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, Sector), 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        name="Engagement B (Low) - Sector: 2022",
                
        marker = list(colors = cols_sector),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```


### Engagement B (Low) - SES: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        name="Engagement B (Low) - SES: 2022",
                
        marker = list(colors = cols_SES),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement B (Low) - ADII: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, ADII), 
        labels = ~ADII, values = ~n, 
        type = 'pie',
        name="Engagement B (Low) - ADII: 2022",
                
        marker = list(colors = cols_ADII),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

## Engagement B (Low) - Metro: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_low, Metro), 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        name="Engagement B (Low) - Metro: 2022",
        marker = list(colors = cols_metro),
    texttext = "label",
  textposition = 'outside') %>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

## Engagement B (High) 

```{r}
temp2022_eng_high<-temp2022_eng%>%filter(total_engB_type=="High")

```



### Engagement B (High) - Type: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, Type), 
        labels = ~Type, values = ~n, 
        type = 'pie',
        name="Engagement B (High) - Type: 2022",
                
        marker = list(colors = cols_type),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement B (High) - Sector: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, Sector), 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        name="Engagement B (High) - Sector: 2022",
                
        marker = list(colors = cols_sector),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```


### Engagement B (High) - SES: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        name="Engagement B (High) - SES: 2022",
                
        marker = list(colors = cols_SES),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement B (High) - ADII: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, ADII), 
        labels = ~ADII, values = ~n, 
        type = 'pie',
        name="Engagement B (High) - ADII: 2022",
                
        marker = list(colors = cols_ADII),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement B (High) - Metro: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_high, Metro), 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        name="Engagement B (High) - Metro: 2022",
                
        marker = list(colors = cols_metro),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```


## Engagement B (Med) 

```{r}
temp2022_eng_med<-temp2022_eng%>%filter(total_engB_type=="Med")

```



### Engagement B (Medium) - Type: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_med, Type), 
        labels = ~Type, values = ~n, 
        type = 'pie',
        name="Engagement B (Medium) - Type: 2022",
                
        marker = list(colors = cols_type),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement B (Medium) - Sector: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_med, Sector), 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        name="Engagement B (Medium) - Sector: 2022",
        
                
        marker = list(colors = cols_sector),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```


### Engagement B (Medium) - SES: 2022"

```{r}

#pie chart

plot_ly(data=count(temp2022_eng_med, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        name="Engagement B (Medium) - SES: 2022",
        
                
        marker = list(colors = cols_SES),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement B (Medium) - ADII: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_med, ADII), 
        labels = ~ADII, values = ~n, 
        type = 'pie',
        name="Engagement B (Medium) - ADII: 2022",
        
                
        marker = list(colors = cols_ADII),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")
```

### Engagement B (Medium) - Metro: 2022"

```{r}


#pie chart

plot_ly(data=count(temp2022_eng_med, Metro), 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        name="Engagement B (Medium) - Metro: 2022",
        
        marker = list(colors = cols_metro),
    texttext = "label",
  textposition = 'outside')%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ")

```


end of pie charts for Engagement


```{r}



#-----------Engagement A
temp2022_eng%>%ggplot(aes(x=total_engA_type, fill=total_engA_type))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement A",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))


temp2022_eng%>%ggplot(aes(x=total_engA_type, fill=Sector))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement A by Sector",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

temp2022_eng%>%ggplot(aes(x=total_engA_type, fill=Type))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement A by Type",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

temp2022_eng%>%ggplot(aes(x=total_engA_type, fill=SES))+
   geom_bar(width=0.5)+
      labs(title="Part Engagement A by SES",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
temp2022_eng%>%ggplot(aes(x=total_engA_type, fill=ADII))+
  geom_bar()

temp2022_eng%>%ggplot(aes(x=total_engA_type, fill=Metro))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement A by Metro/non-metro",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))


#-----------Engagement B
temp2022_eng%>%ggplot(aes(x=total_engB_type, fill=total_engB_type))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement B",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))


temp2022_eng%>%ggplot(aes(x=total_engB_type, fill=Sector))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement B by Sector",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

temp2022_eng%>%ggplot(aes(x=total_engB_type, fill=Type))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement B by Type",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

temp2022_eng%>%ggplot(aes(x=total_engB_type, fill=SES))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement B by SES",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

temp2022_eng%>%ggplot(aes(x=total_engB_type, fill=ADII))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement B by ADII",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

temp2022_eng%>%ggplot(aes(x=total_engB_type, fill=Metro))+
  geom_bar(width=0.5)+
      labs(title="Part Engagement B by Metro",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))
# Comparative engagement

names(temp2022_eng) <- fig_eng_categories

temp2022_eng %>%
  pivot_longer(names_to="Engagement",
               values_to="value",
               cols=c(7:8))%>%
  ggplot(aes(x=value, fill=Engagement))+
  geom_bar(position="dodge", width=0.5)+
    geom_bar(width=0.5)+
      labs(title="Part Engagement ",
        x =" ", y = "")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 10))

  
```

### Figure 18. 2021: How well-placed schools believe they are to prevent a situation: pre- vs. post-Part B: self-assessment

```{r}

#----------
pre2021<-data2021%>%
  drop_na(pre_1)%>%
  mutate(
    pre1_status=case_when(
      pre_1<post_8_1 ~"Post-score higher",
      pre_1==post_8_1 ~"No change",
      TRUE ~ "Pre-score higher"),
    pre2_status=case_when(
      pre_2<post_8_2 ~"Post-score higher",
      pre_2==post_8_2 ~"No change",
      TRUE ~ "Pre-score higher")
  )


vals= count(pre2021, pre1_status)

plot_ly(data=count(pre2021, pre1_status), 
        labels = ~pre1_status, values = ~n, 
        type = 'pie',
        name="Pre/Post 2021",
          marker = list(colors = c("#1f4e78", "#3c84c2", "#b7d1ea")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside'
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))
```

### Figure 19. 2021: How well-placed schools believe they are to respond to a situation: pre- vs. post-Part B: self-assessment
```{r}

vals= count(pre2021, pre2_status)

plot_ly(data=count(pre2021, pre2_status), 
        labels = ~pre2_status, values = ~n, 
        type = 'pie',
        name="Pre/Post 2021",
          marker = list(colors = c("#1f4e78", "#3c84c2", "#b7d1ea")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside'
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))
```

---------

### Figure 18. 2022: How well-placed schools believe they are to prevent a situation: pre- vs. post-Part B: self-assessment

```{r}

#----------
pre2022<-data2022%>%
  drop_na(pre_1)%>%
  mutate(
    pre1_status=case_when(
      pre_1<post_8_1 ~"Post-score higher",
      pre_1==post_8_1 ~"No change",
      TRUE ~ "Pre-score higher"),
    pre2_status=case_when(
      pre_2<post_8_2 ~"Post-score higher",
      pre_2==post_8_2 ~"No change",
      TRUE ~ "Pre-score higher")
  )


vals= count(pre2022, pre1_status)

plot_ly(data=count(pre2022, pre1_status), 
        labels = ~pre1_status, values = ~n, 
        type = 'pie',
        name="Pre/Post 2022",
          marker = list(colors = c("#1f4e78", "#3c84c2", "#b7d1ea")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside'
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))
```

### Figure 19. 2022: How well-placed schools believe they are to respond to a situation: pre- vs. post-Part B: self-assessment
```{r}

vals= count(pre2022, pre2_status)

plot_ly(data=count(pre2022, pre2_status), 
        labels = ~pre2_status, values = ~n, 
        type = 'pie',
        name="Pre/Post 2022",
          marker = list(colors = c("#1f4e78", "#3c84c2", "#b7d1ea")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside'
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))
```

--------



### 2021: How well-placed schools believe they are to prevent a situation: pre- vs. post-Part B: self-assessment

```{r}

#----------
pre2022<-data2022%>%
  drop_na(pre_1)%>%
  mutate(
    pre1_status=case_when(
      pre_1<post_8_1 ~"Improved",
      pre_1==post_8_1 ~"No change",
      TRUE ~ "Downgrade"),
    pre2_status=case_when(
      pre_2<post_8_2 ~"Improved",
      pre_2==post_8_2 ~"No change",
      TRUE ~ "Downgrade")
  )


vals= count(pre2021, pre2_status)

plot_ly(data=count(pre2021, pre2_status), 
        labels = ~pre2_status, values = ~n, 
        type = 'pie',
        name="Pre/Post 2021",
          marker = list(colors = c("#1f4e78", "#3c84c2", "#b7d1ea")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside'
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))

```

### 2022: How well-placed schools believe they are to respond to a situation: pre- vs. post-Part B: self-assessment
```{r}

vals= count(pre2022, pre2_status)

plot_ly(data=count(pre2022, pre2_status), 
        labels = ~pre2_status, values = ~n, 
        type = 'pie',
        name="Pre/Post 2022",
          marker = list(colors = c("#1f4e78", "#3c84c2", "#b7d1ea")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                format(
                  round(n / sum(n)*100), nsmall = 1
                  ), "%"),
 textinfo = "text",
  textposition = 'outside'
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'))

```


Figure 20. Comparison of Part A and Part B scores - all schools

Figure 21. two bar charts that include the 2021 vs. 2022 results for the six schools that completed the instrument both years -- by Domain and total for Part A, and by Focus Area and total for Part B. \## Results

\[Repeat charts from 2021 report, but with comparison to 2022 data. So, for example, bar charts would show both 2021 data (striped) next to 2022 data (solid). If charts get too crowded/too hard to read, can present side-by-side or vertically. Test for any statistically significant differences and indicate in chart.\]

```{r f2}

```

The first chart is identical to Fig 10 (Overall Part A results) but just for those six schools -- so compares outcomes in 2021 and 2022
The second chart is identical to Fig 13 - second version (overall Part B results) but just for those six schools - 2021 vs. 2022
The third I was hoping you could produce is identical to Fig 17 (but with 2021 and 2022 results combined into a single chart, as specified in my previous email) - but just for those six schools - 2021 vs. 2022

```{r}
temp2021_same<-data2021[data2021$School %in% c(14, 16, 27, 33, 41, 38), ]
  
  
temp2021_same<-temp2021_same%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total)

names(temp2021_same) <- figa_categories

temp2021_same_f10<-temp2021_same%>%mutate(
  across(
    c(7:12),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:12))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2021")

#-----2022 - Part A

temp2022_same<-data2022[data2022$School %in% c(14, 16, 27, 33, 41, 38), ]


temp2022_same<-temp2022_same%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total)

names(temp2022_same) <- figa_categories

temp2022_same_f10<-temp2022_same%>%mutate(
  across(
    c(7:12),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:12))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2022")

temp2021_same_f10<-rbind(temp2021_same_f10, temp2022_same_f10)

temp2021_same_f10%>%
  ggplot(aes(x=Categories, y= Mean*100, fill=year))+
  geom_col(stat="identity", position=position_dodge(), width = 0.5)+
labs(title="2021/2022:  Completed both years - Part A: average (mean) completion of eSmart action items - all schools by Domain)",
        x =" ", y = " % assessed as completed")+
    scale_fill_grey(start = 0.8, end = 0.2)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+
geom_text(aes(label = paste0(round(Mean*100),"%")), 
          position=position_dodge(width=0.5), 
          size = 3,
          vjust=-0.5)

```


The second chart is identical to Fig 13 - second version (overall Part B results) but just for those six schools - 2021 vs. 2022

```{r}
temp2021_same<-data2021[data2021$School %in% c(14, 16, 27, 33, 41, 38), ]

#-----2021 - Part B

temp2021_same_b<-temp2021_same%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor)

names(temp2021_same_b) <- figb_categories

temp2021_same_b<-temp2021_same_b[rowSums(is.na(temp2021_same_b[7:18])) != ncol(temp2021_same_b[7:18]), ] 


temp2021_b[1:2, 7:16]

temp2021_same_f13n<-temp2021_same_b%>%mutate(
  across(
    c(7:16),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:11))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2021")

#-----2022 - Part B

temp2022_same<-data2022[data2022$School %in% c(14, 16, 27, 33, 41, 38), ]


temp2022_same_b<-temp2022_same%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor)

names(temp2022_same_b) <- figb_categories

temp2022_same_b<-temp2022_same_b[rowSums(is.na(temp2022_same_b[7:18])) != ncol(temp2022_same_b[7:18]), ] 

temp2022_same_f13n<-temp2022_same_b%>%mutate(
  across(
    c(7:16),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:11))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2022")

temp_same_f13n<-rbind(temp2021_same_f13n, temp2022_same_f13n)
#

```
```{r}
#----- plot - part B

temp_same_f13n%>%
  ggplot(aes(x=Categories, y= Mean))+
  geom_col(width=0.5)+
  facet_wrap(vars(year))+
  facet_wrap(vars(year))+
    labs(title="2Part B: results by Focus Area - SAME schools",
        x =" ", y = " Score 0-80")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 7))+
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+
geom_text(aes(label = round(Mean)), 
          position=position_dodge(width=0.7), vjust=-0.5)



temp_same_f13n%>%
  ggplot(aes(x=Categories, y= Mean, fill=year))+
  geom_col(stat="identity", position=position_dodge(), width=0.5)+
    labs(title="2Part B: results by Focus Area - SAME schools",
        x =" ", y = " Score 0-80")+
    scale_fill_grey(start = 0.8,
  end = 0.2)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 20))+
geom_text(aes(label = round(Mean)), 
          position=position_dodge(width=0.5), 
                      size = 3,
          vjust=-0.5)
```


