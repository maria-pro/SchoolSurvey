---
title: "Report: final charts 2021/2022"
author: Victoria University
#date: 2022-17-08
date-format: short
execute: 
  echo: false
  warning: false
always_allow_html: true
title-block-banner: true
format: 
  html:
    toc: true
    toc-depth: 2
---

```{r}

#| label: libraries

library(tidyverse)
library(ggpattern)
library(psych)
library(gt)
library(plotly)
library(janitor)
library(ggthemes)
library(rvg)




addvar<-function(data){
  data<-data%>%mutate(total5=d1+d2+d3+d4+d5,
         total_pc=total5/5,
         parta1_total=parta1_1+parta1_2+parta1_3,
         parta1_total_pc=parta1_total/3,
         parta2_total=parta2_1+parta2_2+parta2_3,
         parta2_total_pc=parta2_total/3, 
         parta3_total=parta3_1+parta3_2+parta3_3+parta3_4,
         parta3_total_pc=parta3_total/4,
         parta4_total=parta4_1+parta4_2+parta4_3+parta4_4+parta4_5,
         parta4_total_pc=parta4_total/ 5,
         parta5_total=parta5_1+parta5_2+parta5_3,
         parta5_total_pc=parta5_total/ 3
         )
}


#font settings
t <- list(
  size = 18,
  color = 'black')

#----colours setup
# ggplot use
colors_list_sector <- list(
  "Government" = "#3d83c2",
  "Catholic" = "#cf4648",
  "Independent" = "#93bc48"
)
#plot_ly use
cols_sector <- c("#3d83c2", "#cf4648", "#93bc48")

#-------
colors_list_type <- list(
  "Primary" = "#ff902c",
  "Secondary" = "#00aec9",
  "Combined" = "#8663a7"
)

cols_type <- c("#ff902c", "#00aec9", "#8663a7")

#----------------
colors_list_ADII <- list(
  "Below Average" = "#1B9E77",
  "Above Average" = "#D95F02"
)

colors_list_ADII <- list(
  "Below Average" = "#cbcbcb",
  "Above Average" = "#565656"
)

cols_ADII <- c("#cbcbcb", "#565656")
#----------------

colors_list_SES <- list(
  "Low" = "#e2a8a8",
  "Medium" = "#cf4648",
  "High" = "#ab393a"
)
cols_SES <- c("#e2a8a8", "#cf4648", "#ab393a")

cols_metro <- c("#755693","#ac9ac0")

cols_engA <- c("#bdd49b", "#71a600")

cols_engB <- c("#ff6800","#fc8b00", "#f8bb83")

```

```{r}
#| label: loading_files
#| message: false

data2021<-read_csv("data/AMF2021.csv")
data2021<-data2021[rowSums(is.na(data2021)) != ncol(data2021), ] 

data2022<-read_csv("data/AMF2022.csv")
data2022<-data2022[rowSums(is.na(data2022)) != ncol(data2022), ] 

#stats2021<-data2021
#total_cat<-as_vector(data_dic%>%distinct(subclass))

#names(stats2021) <- total_cat

  
 # data2022


#skimr::skim(data2022)
#describe(data2021)

#data2022 adjustment

data2021<-addvar(data2021)

data2022<-addvar(data2022)

data_dic<-read_csv("data/data_dic.csv")

#data_dic[7:21,1]

```

```{r}
#factor levels

data2021<-data2021%>%
  mutate(
     Sector=factor(Sector,levels=c("Government","Catholic", "Independent")),
     Type=factor(Type,levels=c("Primary","Secondary", "Combined")),
     SES=factor(SES,levels=c("Low","Medium", "High")),
     ADII=factor(ADII,levels=c("Below Average","Above Average")),
    Metro=factor(Metro,levels=c("Non-metro","Metro"))
  )

data2022<-data2022%>%
  mutate(
     Sector=factor(Sector,levels=c("Government","Catholic", "Independent")),
     Type=factor(Type,levels=c("Primary","Secondary", "Combined")),
     SES=factor(SES,levels=c("Low","Medium", "High")),
     ADII=factor(ADII,levels=c("Below Average","Above Average")),
    Metro=factor(Metro,levels=c("Non-metro","Metro"))
  )



```

# Demographics of schools participating in the self-assessment tool: 2021 & 2022

**Notes:**

**This is automated, so next time you do this report you just need to swap (=rename) the data file. If a different set of questions is used next time, this can be easily updated in the data dictionary file (data_dic.csv).*

*Also the text generation can be automated, so if you usually includes the same statistics in the description, these numbers can be drawn directly from data and inserted automatically, so you will just need to review the text**


In the 2022 evaluation, as in the 2021 evaluation, a majority of the participant were government schools. In 2022, 7 of the 12 participating schools were government schools, 4 were Catholic schools, and just 1 was an Independent school.

*Chart notes*:

*• The font on all of the pie charts is very small -- probably too small for readers to make out. Is it possible to enlarge -- similar to the 2021 report? NOTE that if this takes much time, just leave as is.*

**I changed the font on Charts to Times New Romans, 14 - this can be adjusted easily, please confirm**

*•   I had originally asked for percentages to one decimal point, but given that there are now 0s for each data point, just leave them as whole numbers.  So – 33% (rather than 33.0%)*

**I changed this to integer with proper rounding**

* It would also be nice if the legend and the pie pieces matched up, as they do in the 2021 report. So if Government is the first category listed in the legend, reading left to right, the Government pie piece is also on the left. NOTE: if this takes too much time, just leave as is.*

**done - all pie charts are completely the same orientation as in the 2021 report, including the order of colours on the pie sections.**


### Participants profile

2021

```{r}
  
vals= count(data2021, Sector)

plot_ly(data=count(data2021, Sector), 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_sector),
  direction='clockwise',
  sort =TRUE,
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Sector data 2021",
rotation=180
)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t
         )


```
2022
```{r}

#2022
vals= count(data2022, Sector)

plot_ly(data=count(data2022, Sector), 
        labels = ~Sector, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_sector),
  direction='clockwise',
  sort =TRUE,
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Sector data 2022",
rotation=180
)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t
#         ,
#         direction = "counterclockwise",
#         rotation = 180
         )


```

*Figure 1. Participants by school sector*

Similar to 2021, in 2022 a large majority of participating schools were primary schools. In the 2022 evaluation, 9 of the 12 participating schools were Primary schools, with 2 combined schools and 1 secondary school. In the 2021 evaluation, more secondary schools than combined schools participated.

2021
```{r}

#| label: fig2-type
#| fig-cap: Participants by school type.
#| warning: false

vals= count(data2021, Type)

plot_ly(data=count(data2021, Type), 
        labels = ~Type, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_type),
  
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Type data 2021",
  direction='clockwise',
  sort =TRUE,
rotation=90)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)
```
2022


```{r}

vals= count(data2022, Type)
vals$Type<=factor(vals$Type, levels=c("Primary","Secondary", "Combined"))

plot_ly(data=vals, 
        labels = ~Type, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_type),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Type data 2021",
  direction='clockwise',
  sort =TRUE,
rotation=120)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)


```
*Figure 2. Participants by school type*

In both 2021 and 2022, approximately 2/3rds of participating schools were high-SES schools, with the rest approximately evenly divided between medium and low-SES schools.  In 2022, 8 of the 12 participating schools were high SES schools, 2 were medium SES schools, and 2 were low SES schools.

2021

```{r}
### 2021 Participants by SES

vals= count(data2021, SES)

plot_ly(data=count(data2021, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_SES),
  text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="SES data 2021",
  direction='clockwise',
  sort =TRUE,
rotation=215)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)

```

2022

```{r}
### 2022 Participants by SES

vals= count(data2022, SES)

plot_ly(data=count(data2022, SES), 
        labels = ~SES, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_SES),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="SES data 2022",
  direction='clockwise',
  sort =TRUE,
rotation=240)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)

```
*Figure 3. Participants by SES*


As in 2021, in 2022 a large majority of participating schools were above average on the Australian Digital Inclusion Index.  In 2022, 9 of the 12 participating schools were above average on the ADII, with 2 below average and 1 with an unknown ADII score.

2021

```{r}
### 2021 Participants by ADII

vals= count(data2021, ADII)

plot_ly(data=count(data2021, ADII), 
        labels = ~ADII, values = ~n, 
        sort = FALSE,
        type = 'pie',
  marker = list(colors = cols_ADII),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="ADII data 2021",
  direction='clockwise',
  sort =TRUE,
rotation=180)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)

```

2022

```{r}
### 2022 Participants by ADII

vals= count(data2022, ADII)

vals<-vals%>% mutate(ADII = ifelse(is.na(ADII), "Unknown", paste(ADII)))

plot_ly(data=vals, 
        labels = ~ADII, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_ADII),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="ADII data 2022",
  direction='clockwise',
  sort =TRUE,
rotation=210)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)

```
*Figure 4. Participants by ADII*

The percentage of metropolitan schools participating in the evaluation increased in 2022, with 9 of the 12 participating schools located in metropolitan areas, and 3 located in non-metropolitan areas.

2021

```{r}
### 2021 Participants by metro / non-metro

vals= count(data2021, Metro)

plot_ly(data=vals, 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_metro),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Metro/non-metro data 2021")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t) 

```

2022
```{r}
### 2022 Participants by metro / non-metro

vals= count(data2022, Metro)

plot_ly(data=vals, 
        labels = ~Metro, values = ~n, 
        type = 'pie',
        sort = FALSE,
  marker = list(colors = cols_metro),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Metro/non-metro data 2022")%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)

```

*Figure 5. Participants by location: metro / non-metro*

In 2022, schools were asked to respond to two sets of questions about their level of engagement with the eSmart Framework and eSmart Advisors.  The Engagement A scale consisted of five questions about the frequency with which the schools engaged, with seven response options from “weekly” to “once a year” and “never”.  The Engagement B scale consisted of six yes/no questions that asked whether the school had engaged with a variety of people, resources, and events.  Schools were considered to have scored “High” on Engagement A if they scored 16 or more out of a total possible score of 35 and “Low” if they scored less than 16.  Schools were considered to have scored “High” on Engagement B if they answered “yes” to 3 or more of the 6 questions; “Medium” if they answered “yes” to 1 or 2 of the 6 questions, and “Low” if they did not answer “yes” to any of the 6 questions.

Six of the 12 participating schools were characterised as having high engagement on the Engagement A scale and six were characterised as having low engagement.  On the Engagement B scale, three schools were characterised as having high engagement, four as having a medium level of engagement, and five as having low engagement.


*Could you change these to a different colour, as these are the colours used for schools sector.  How about light and dark green for Engagement A and light and dark orange for Engagement B?* 
**done**


```{r}

#vals= count(data2022, total_engA_type)

vals<-data.frame(total_engA_type=c("Low", "High"),
                 n=c(6, 6)
                 )

vals$total_engA_type<-factor(vals$total_engA_type,levels=c("Low", "High"))

plot_ly(data=vals, 
        labels = ~vals$total_engA_type, values = ~vals$n, 
        type = 'pie',

  marker = list(colors = c("#bdd49b", "#71a600")),
  
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n/sum(n)*100, digits = 0)
                   , "%"),
textinfo = "text",
  textposition = 'outside',
        name="Engagement A data 2022",
  direction='counterclockwise',
   sort =FALSE,
rotation=180
)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)

```

### by Sector 2022 - Engagement B data 2022

```{r}

vals= count(data2022, total_engB_type)

plot_ly(data=vals, 
        labels = ~total_engB_type, values = ~n, 
        type = 'pie',
  marker = list(colors = cols_engB),
  
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
        name="Engagement B data 2022",
  direction='clockwise',
  sort =TRUE,
rotation=90)%>%
  layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)


```
**done. Colours are set up at the global level and are linked to specific questions, so any new dataset will also have the same colour way for its charts. In case colours need to be adjusted - it is easily done at the global level **


**Further changes requested 2:** Done

*Can you please make Low the first category for both charts (with the pie piece corresponding to Low moved to the left side)*

*Eng A – The lighter shade is a bit glaring.  Instead of these shades, could you use the green colours you used in the first chart under Part A –Independent schools?*

*Eng B – Could you make these shades more orange (this is too close to the red used for SES).  How about something like this:*

Appendix X includes a copy of the 2022 SAT. 

## Results

The quantitative results are presented in two sections.  The first section provides results for all schools that completed the SAT in 2021 and/or 2022.  This includes the 45 schools that completed Part A in 2021, the 36 schools that completed Part B in 2022, and the 12 schools that completed both Part A and Part B in 2022.

The second section provides results for the six schools that completed the SAT in both 2021 and 2022, in order to examine change over time.  Given this small number, results are not broken down by demographics such as school sector or SES. 

### Quantitative results: All schools 2021 and 2022

This next section of the report provides results for all schools that completed the SAT in 2021 and/or 2022.  In interpreting these results, the small sample size in 2022 (N=12) must be kept in mind, including the fact that only one Independent school participated.


### Part A Results
For all participant schools, the median number of action items achieved across the six domains was slightly lower in 2022 than in 2021 – 17 vs. 19 out of a total score of 23.  As in 2021, Catholic schools reported the highest average score (20), followed by Independent schools (17) and government schools (15).

*Note: *

*Need a chart here that combines 2021 and 2022 into a single chart – so bars for 2021 and 2022 are next to each other for Total and by sector (similar to the grey chart 3 charts below this one) – with lighter blue for 2021 govt and this blue for 2022 govt; lighter red for 2021 Catholic and this red for 2022 Catholic; lighter green for 2021 Independent and this green for 2022 Independent; lighter grey for 2021 All schools and this grey for 2022 All schools.  Below is from 2021 only, for reference.*

**Done**


**Changes requested 2**: Please note that the previous version was done EXACTLY following your format. These changes are different from your report to be used as a "model"

*Needs a legend indicating 2021 and 2022*
*Needs a Y-axis with ticks plus a label – “Number of action items achieved (out of 23)”*


```{r}
fig8_21<-data2021%>%
  select(Sector, parta_total)%>%
  add_row(Sector='All schools', parta_total=round(data2021$parta_total))

fig8_21$Sector = factor(fig8_21$Sector,levels=c("Government","Catholic", "Independent", "All schools"))

fig8_21<-fig8_21%>%
  group_by(Sector)%>%
  summarise(n=median(parta_total))%>%
  mutate(year="2021")

fig8_22<-data2022%>%
  select(Sector, parta_total)%>%
  add_row(Sector='All schools', parta_total=round(data2022$parta_total))

fig8_22$Sector = factor(fig8_22$Sector,levels=c("Government","Catholic", "Independent", "All schools"))

fig8_22<-fig8_22%>%
  group_by(Sector)%>%
  summarise(n=median(parta_total))%>%
  mutate(year="2022")


fig8<-rbind(fig8_21, fig8_22)

fig8$n<-round(fig8$n)

fig8%>%
  ggplot(aes(x=Sector, y=n, fill=Sector, alpha=year))+
  geom_bar(stat='identity', position='dodge', width = 0.5)+
  labs(title=" ",
        x =" ", y = "Number of action items achieved (out of 23) ")+
  theme(

    legend.position="bottom",
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),


#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black")
#,
#axis.ticks.y=element_blank()
)+

scale_fill_manual(values=c('#4e81bc','#e32f2a', '#7da52b', '#848484'))+
    scale_alpha_manual(values=c(0.5, 1)) + 
#  scale_y_discrete(
#    "Number of action items achieved (out of 23)",
 #   limits=c(0, 25), 
#    breaks=c("0.5","1","2"), 
# expand = expansion(mult = 0.05))+
geom_text(aes(label = n), 
          position=position_dodge(width=0.5), 
          
          size = 3,
          vjust=-0.5)
```








2022: Part A: number of eSmart action items achieved (out of 23) by sector)

```{r}

fig9<-data2022%>%
  count(Sector, parta_total)


fig9%>%
  ggplot(aes(parta_total, n, fill=fct_rev(Sector)))+
  geom_col(width=0.5)+
    labs(title="",
        x ="Number of eSmart action items achieved", y = " Number of schools")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
  scale_fill_manual(values=colors_list_sector)+
  scale_y_continuous(limits = c(0, 2), breaks = seq(0, 2, 1))+
  scale_x_continuous(limits = c(0, 23.5), breaks = seq(0, 23, 1))+
  geom_text(aes(label = n),
              position = position_stack(vjust = .5))

```

The spread of resonses by schools was similar in 2022 and 2021, ranging from a low of 10 (2022) or 11 (2021) to a high of 23 (both years).  Although patterns are more difficult to discern in 2022 with the small sample size, it appears that, similar to the results in 2021, government schools tended to report that they had achieved fewer action items than did Catholic schools.

*Note*:

*remove last parenthesis at end of titles
Note: Is it possible to be able to paste in the charts without the titles?  If that’s a pain, just leave as is.*

**titles were removed from this section onwards. Each chart includes a text title to avoid confusion**

2021 Part A: number of eSmart action items achieved (out of 23) by sector

```{r}

fig9<-data2021%>%
  count(Sector, parta_total)


fig9%>%
  ggplot(aes(parta_total, n, fill=fct_rev(Sector)))+
  geom_col(width=0.5)+
    labs(title="",
        x ="Number of eSmart action items achieved", y = " Number of schools")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
  scale_fill_manual(values=colors_list_sector)+
  scale_y_continuous(limits = c(0, 9), breaks = seq(0, 9, 1))+
  scale_x_continuous(limits = c(0, 23.5), breaks = seq(0, 23, 1))+
  geom_text(aes(label = n),
              position = position_stack(vjust = .5))
#   stat_count(aes(y=..count..,label=..count..), geom="text",vjust=2)

```

2022 Part A: number of eSmart action items achieved (out of 23) by sector

```{r}

fig9<-data2022%>%
  count(Sector, parta_total)


fig9%>%
  ggplot(aes(parta_total, n, fill=fct_rev(Sector)))+
  geom_col(width=0.5)+
    labs(title="",
        x ="Number of eSmart action items achieved", y = " Number of schools")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
  scale_fill_manual(values=colors_list_sector)+
  scale_y_continuous(limits = c(0, 2), breaks = seq(0, 2, 1))+
  scale_x_continuous(limits = c(0, 23.5), breaks = seq(0, 23, 1))+
  geom_text(aes(label = n),
              position = position_stack(vjust = .5))

```
The percentage achievement within each Domain for all schools that completed the SAT in 2021 or 2022 is presented below.  In general, levels of achievement were slightly lower in 2022 than in 2021.  As in 2021, highest scores in 2022 were for School plans, policies, and procedures, and A respectful and caring school community.  The largest drop between 2021 and 2022 was in Effective school organisation.  It is possible that COVID had a particularly negative impact on this Domain.


*Note*:

*title is cut off*

**Fixed**

Part A: average (mean) completion of eSmart action items - all schools by Domain


```{r}

#----- Part A and Part B setup

part_a_categories<-as_vector(data_dic%>%
  filter(class=="PART A")%>%
  distinct(subclass)
  )
  
figa_categories<-append(c(
  "School",
  "Sector",
  "Type",
  "SES",
  "ADII",
  "Metro"
),part_a_categories)

#-----2021 - Part A

temp2021_a<-data2021%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total)

names(temp2021_a) <- figa_categories

temp2021_f10<-temp2021_a%>%mutate(
  across(
    c(7:12),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:12))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2021")

#-----2022 - Part A

temp2022_a<-data2022%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total)

names(temp2022_a) <- figa_categories

temp2022_f10<-temp2022_a%>%mutate(
  across(
    c(7:12),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:12))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2022")

temp_f10<-rbind(temp2021_f10, temp2022_f10)

# reorder factor

temp_f10$Categories<-factor(temp_f10$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))

```

```{r}
#part B
part_b_categories<-as_vector(data_dic%>%
  filter(class=="PART B")%>%
  distinct(subclass)
  )

figb_categories<-append(c(
  "School",
  "Sector",
  "Type",
  "SES",
  "ADII",
  "Metro"
),part_b_categories)

#-----2021 - Part B

temp2021_b<-data2021%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor)

names(temp2021_b) <- figb_categories

temp2021_b<-temp2021_b[rowSums(is.na(temp2021_b[7:18])) != ncol(temp2021_b[7:18]), ] 

temp2021_f13n<-temp2021_b%>%mutate(
  across(
    c(7:16),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:11))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2021")

#-----2022 - Part B

temp2022_b<-data2022%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor)

names(temp2022_b) <- figb_categories

temp2022_b<-temp2022_b[rowSums(is.na(temp2022_b[7:18])) != ncol(temp2022_b[7:18]), ] 

temp2022_f13n<-temp2022_b%>%mutate(
  across(
    c(7:16),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:11))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2022")


temp_f13n<-rbind(temp2021_f13n, temp2022_f13n)
#
```

2021/2022 - Figure 10. Part A: average (mean) completion of eSmart action items - all schools by Domain

```{r}
#----- plot - part A

temp_f10%>%
  ggplot(aes(x=Categories, y= Mean*100, fill=year))+
  geom_col(stat="identity", position=position_dodge(), width = 0.5)+
labs(title="",
        x =" ", y = " % assessed as completed")+
    scale_fill_grey(start = 0.8, end = 0.2)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+
geom_text(aes(label = paste0(round(Mean*100),"%")), 
          position=position_dodge(width=0.5), 
          size = 3,
          vjust=-0.5)


```
Examining these results by school sector, we see similar patterns in 2022 and 2021, with the Government schools tending to report lower achievement than the Catholic schools.  In 2022, only one Independent school participated.  


*Note*:

*Title is cut off*

*Consistency with how categories are displayed.  In this chart, each category is two or  three lines; in the next chart, each is a single line.  I think single line is easier to read.*

**Done**

Part A: average (mean) completion of eSmart action items by Domain by sector

```{r}

temp2021_a$year<-"2021"
temp2022_a$year<-"2022"

temp<-rbind(temp2021_a, temp2022_a)



fig11<-temp%>%
  group_by(Sector, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  ungroup%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig11$Categories<-factor(fig11$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig11%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Sector)))+
  geom_col(stat="identity", position= "dodge2")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#   scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(Sector), fill=fct_rev(Sector)), 
              position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75
              )+
  scale_fill_manual(values=colors_list_sector)+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")


```
Although it appears that in 2022, similar to 2021, secondary schools tended to report higher achievement than the other types of schools, it must be remembered that only one secondary school participated in 2022. 

*Title is cut off*
**Fixed**

```{r}
fig12<-temp%>%
  group_by(SES, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))

```


Part A: Average (mean) completion by Domain by Type

```{r}
fig12<-temp%>%
  group_by(Type, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Type)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(Type), fill=fct_rev(Type)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=colors_list_type)

```

An examination of results by SES shows no consistent patterns in 2022, similar to 2021, with low SES schools often reporting as much or more successful achievement on each Domain as high SES schools.  

In 2022, high SES schools scored relatively highly on the Effective school organisation Domain, medium SES schools on the eSmart Curriculum Domain, and low SES schools on the Respectful and caring school Domain (along with medium SES schools).  Low SES schools reported low scores on the Effective school organisation Domain (along with medium SES schools) and on the eSmart curriculum Domain.

*Title is cut off*
*Done*

```{r}
fig12<-temp%>%
  group_by(SES, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(SES)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(SES), fill=fct_rev(SES)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=colors_list_SES)

```

Text here xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

*Title cut off
*There are 3 bars in 2022(?).  Please exclude missing data from analysis*

*done*


Part A: Average (mean) completion by Domain by ADII 


```{r}
fig12<-temp%>%
  group_by(ADII, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  drop_na(ADII)%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(ADII)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(ADII), fill=fct_rev(ADII)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=colors_list_ADII)

```

In 2022, as in 2021, no consistent pattern emerged by location, with metropolitan schools reporting higher achievement than non-metropolitan schools on some Domains and lower achievement on others.  Non-metropolitan schools reported particularly low achievement on the Domains, Effective school organisation (27%) and Community partnerships (56%), and metropolitan schools reported low achievement on the Domain, eSmart curriculum (51%).  

*Title cut off* *done*

Part A: Average (mean) completion by Domain by Metro 


```{r}
fig12<-temp%>%
  group_by(Metro, year)%>%
  summarise(
    across(
      c(6:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

fig12$Categories<-factor(fig12$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


#----PLOT

fig12%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Metro)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
  facet_wrap(vars(year), scales="free_x")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(Metro), fill=fct_rev(Metro)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=c("#755693","#ac9ac0"))

```
`Then, in Part A, results broken down by High and Low Engagement A, and High, Medium, and Low Engagement B.`
 
`And similarly for Part B.`
 
`In other words, just repeat what you did for, say, SES, but replace with Engagement A (High, Low) and Engagement B (High, Medium, Low).`
 

Chart by Engagement A – 2022 here




Chart by Engagement B – 2022 here

```{r}
temp2022_e<-data2022%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total,
total_engA_type,
total_engB_type)

fig_e_categories<-append(c(
  "School",
  "Sector",
  "Type",
  "SES",
  "ADII",
  "Metro"), part_a_categories)

fig_e_categories<-append(fig_e_categories,
                         c("engA", "engB"))

names(temp2022_e) <- fig_e_categories

```




```{r}

fig_e_A<-temp2022_e%>%
  group_by(engA)%>%
  summarise(
    across(
      c(7:12),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:1))%>%
  ungroup()

fig_e_A$Categories<-factor(fig_e_A$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


fig_e_A$engA<-factor(fig_e_A$engA,levels=c("Low","High"))

fig_e_A%>%
  ggplot(aes(x=Categories, y= Mean, fill=engA))+
  geom_col(stat="identity", position= "dodge2")

#----PLOT

fig_e_A%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(engA)   ))+
  geom_col(stat="identity", position= "dodge2")+

#  facet_wrap(vars(year), scales="free_x")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(engA), fill=fct_rev(engA)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
    coord_flip()+
  scale_fill_manual(breaks = c("Low", "High"), values=cols_engA)

```
```{r}
fig_e_B<-temp2022_e%>%
  group_by(engB)%>%
  summarise(
    across(
      c(7:12),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:1))

fig_e_B$Categories<-factor(fig_e_B$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))


fig_e_B$engB<-factor(fig_e_B$engB,
                     levels=c(
                       "Low",
                       "Med",
                       "High"
                     ))
#----PLOT

fig_e_B%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(engB) ))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
#  facet_wrap(vars(year), scales="free_x")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean*100), group = fct_rev(engB), fill=fct_rev(engB)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(breaks = c("Low", "Med", "High"), values=cols_engB)

```

### Part B Results

Results by Focus Area differed somewhat in 2022 compared to 2021.  In 2022, the School Climate domain dropped from highest score to second-lowest score.  This result may be due to the impact of COVID and associated school closures and switch to on-line learning.  It may also be due simply to the small sample size in 2022.  The highest score in 2022 was for the Response Focus Area.  In both years, the Data domain was lowest or equal lowest.

`Remove the “2” from start of title`
`I would like to be able to insert title separately from chart if possible.  If this is too difficult, just leave as is.`
*done*


Part B: results by Focus Area - all schools

```{r}
#----- plot - part B

temp_f13n%>%
  ggplot(aes(x=Categories, y= Mean))+
  geom_col(width=0.5)+
  facet_wrap(vars(year))+
  facet_wrap(vars(year))+
    labs(title="",
        x =" ", y = " Score 0-80")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 7))+
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+
geom_text(aes(label = round(Mean)), 
          position=position_dodge(width=0.7), vjust=-0.5)



temp_f13n%>%
  ggplot(aes(x=Categories, y= Mean, fill=year))+
  geom_col(stat="identity", position=position_dodge(), width=0.5)+
    labs(title="",
        x =" ", y = " Score 0-80")+
    scale_fill_grey(start = 0.8,
  end = 0.2)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
    scale_x_discrete(
      labels = 
                       function(x) str_wrap(x, width = 10)
                     
                     
                     
                     )+
  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 20))+
geom_text(aes(label = round(Mean)), 
          position=position_dodge(width=0.5), 
                      size = 3,
          vjust=-0.5)


```

Unlike 2021, in which government schools tended to report that they were slightly better placed than Catholic and Independent schools to prevent and respond to anti-social activities, no consistent pattern emerged in 2022.

`Can you check the rounding for the data in all of these bar charts?  For example, in this chart, the average (mean) for Catholic schools – Response Domain is 72.5, so should be rounded to 73; but this chart says 72.`

*done. It was a special case of rounding: for rounding off a 5, the IEC 60559 standard (see also ‘IEEE 754’) is expected to be used, ‘go to the even digit’. *


```{r}

temp2021_b$year<-"2021"
temp2022_b$year<-"2022"

temp_b<-rbind(temp2021_b, temp2022_b)

fig14<-temp_b%>%
  group_by(Sector, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

#----PLOT

round2 = function(x, digits) {
  posneg = sign(x)
  z = abs(x)*10^digits
  z = z + 0.5 + sqrt(.Machine$double.eps)
  z = trunc(z)
  z = z/10^digits
  z*posneg
}

fig14%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Sector)))+
  geom_col(stat="identity", position=position_dodge())+

      labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+
  
    geom_text(aes(label = round2(Mean, digits=0), group = Sector, fill=fct_rev(Sector)), 
            hjust = -0.5,
             size = 3,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=colors_list_sector)+
    coord_flip()+
   facet_wrap(vars(year))


```

As in 2021, secondary schools generally reported higher scores on the Part B SAT than did either primary schools or combined schools.  This was particularly true for the Focus Areas, Data and School Climate.


Results by SES are shown below. Similar to the results from Part A, there is no clear pattern in scores in either 2021 or 2022, with low SES schools reporting similar or better results than high SES schools across the five Focus Areas.


2021/2022: Part B: results by Focus Area by SES

```{r}
fig15<-temp_b%>%
  group_by(SES, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

#----PLOT

fig15%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(SES)))+
  geom_col(stat="identity", position=position_dodge(), width=0.7)+
    coord_flip()+
  facet_wrap(vars(year))+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+  
    geom_text(aes(label = round(Mean), group = SES, fill=fct_rev(SES)), 
            hjust = -0.5,
             size = 3,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=colors_list_SES)

```

Part B: results by Focus Area by school type

```{r}
fig16<-temp_b%>%
  group_by(Type, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))

#----PLOT

fig16%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Type)))+
  geom_col(stat="identity", position=position_dodge(), width=0.7)+
  coord_flip()+
  facet_wrap(vars(year))+
      labs(title=" ",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+  
    geom_text(aes(label = round(Mean), group = Type, fill=fct_rev(Type)), 
            hjust = -0.5,
             size = 2.7,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=colors_list_type)

```

Similar to results by SES, there is also no clear pattern of scores across Domains by ADII, with those below average on the ADII sometimes scoring lower than, and other times scoring higher than, above average ADII schools.  In both years, however, below average ADII schools scored lower on the Data Focus Area as compared with above average ADII schools, and particularly in 2022.  In 2022, below average ADII schools scored higher on the Response Domain as compared with above average ADII schools.

Part B: results by Focus Area by ADII

```{r}
fig16<-temp_b%>%
  group_by(ADII, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))%>%
  drop_na()

#----PLOT

fig16%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(ADII)))+
  geom_col(stat="identity", position=position_dodge(), width=0.7)+
  coord_flip()+
  facet_wrap(vars(year))+
      labs(title=" ",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+  
    geom_text(aes(label = round(Mean), group = ADII, fill=fct_rev(ADII)), 
            hjust = -0.5,
             size = 3,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=colors_list_ADII)

```

Similarly, there was no clear pattern in scores by metropolitan or non-metropolitan location.  In 2022, non-metropolitan schools scored slightly higher on the Response Focus Area as compared with metropolitan schools, and metropolitan schools scored slightly higher on the Data and Response Focus Areas.  

Part B: results by Focus Area by metro

```{r}
fig16<-temp_b%>%
  group_by(Metro, year)%>%
  summarise(
    across(
      c(6:10),
      ~ mean(.x, na.rm = TRUE))
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:2))%>%
  drop_na()

#----PLOT

fig16%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(Metro)))+
  geom_col(stat="identity", position=position_dodge(), width=0.7)+
  coord_flip()+
  facet_wrap(vars(year))+
      labs(title=" ",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 10))+  
    geom_text(aes(label = round(Mean), group = Metro, fill=fct_rev(Metro)), 
            hjust = -0.5,
             size = 3,
             position = position_dodge(width = -1))+
  scale_fill_manual(values=c("#755693", "#ac9ac0"))

```

Examining results by levels of engagement, ….

[Chart for Engagement A – 2022 here]
[Chart for Engagement B – 2022 here]


```{r}


#-----2022 - Part B

temp2022_e_b<-data2022%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor, 
total_engA_type,
total_engB_type)

fig_eB_categories<-append(c(
  "School",
  "Sector",
  "Type",
  "SES",
  "ADII",
  "Metro"), part_b_categories)

fig_eB_categories<-append(fig_eB_categories,
                         c("engA", "engB"))

names(temp2022_e_b) <- fig_eB_categories

temp2022_e_b<-temp2022_e_b[rowSums(is.na(temp2022_e_b[7:18])) != ncol(temp2022_e_b[7:18]), ] 

```


```{r}

fig_e_A_n<-temp2022_e_b%>%
  group_by(engA)%>%
  summarise(
    across(
      c(7:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:1))

fig_e_A_n$Categories<-factor(fig_e_A_n$Categories,
                            levels=c(
      "DATA",
      "GATEWAY BEHAVIOURS",
      "REPORTING",
      "RESPONSE",
      "SCHOOL CLIMATE"))


fig_e_A_n$engA<-factor(fig_e_A_n$engA,levels=c("Low","High"))



#----PLOT

fig_e_A_n%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=engA))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
#  facet_wrap(vars(year), scales="free_x")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

#  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean), group = fct_rev(engA), fill=fct_rev(engA)), 
            position = position_dodge(width = .9),
        hjust = - 0.2,
        size=2.75)+
  scale_fill_manual(values=cols_engA)

```
```{r}
fig_e_B_n<-temp2022_e_b%>%
  group_by(engB)%>%
  summarise(
    across(
      c(7:11),
      ~ mean(.x, na.rm = TRUE)
      )
    )%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=!c(1:1))

fig_e_B_n$Categories<-factor(fig_e_B_n$Categories,
                            levels=c(
      "DATA",
      "GATEWAY BEHAVIOURS",
      "REPORTING",
      "RESPONSE",
      "SCHOOL CLIMATE"))


fig_e_B_n$engB<-factor(fig_e_B_n$engB,
                     levels=c(
                       "Low",
                       "Med",
                       "High"
                     ))
#----PLOT

fig_e_B_n%>%
  ggplot(aes(x=fct_rev(Categories), y= Mean, fill=fct_rev(engB)))+
  geom_col(stat="identity", position= "dodge2")+
  coord_flip()+
#  facet_wrap(vars(year), scales="free_x")+
labs(title="",
        x =" ", y = "")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

#  scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1, 0.20), labels = scales::percent)+
  
    geom_text(aes(label = round(Mean), group = engB, fill=engB), 
     #       position = position_dodge(width = .9),
            hjust = -0.5,
             size = 2.7,
             position = position_dodge(width = -1))+
  scale_fill_manual(breaks = c("Low", "Med", "High"), values=cols_engB)

```





### Overall progress (total score by quartile)

Based on the total score in Part B, schools can be assigned to one of four categories that represents where they currently sit in the eSmart Schools journey: Starting (quartile 1), Emerging (quartile 2), Building (quartile 3), or Flourishing (quartile 4).  Such a designation can assist both the Foundation and schools to easily compare overall results across years – to understand where they currently sit and the progress they have made since their last self-assessment.

The four quartiles can also be used by the Foundation as a benchmarking exercise with schools – for example, to demonstrate to each school where it sits overall as compared with other schools from the same sector, SES or ADII status, or metropolitan or non-metropolitan area.

In the 2022 evaluation, six of the participating schools can be classified as Building (quartile 3) and six can be classified as Flourishing (quartile 4).

Y-axis: include ’20’
Include null result for Starting


### Figure 17. Part B: progress in eSmart journey - all schools

2021 and 2022

```{r}
temp_b%>%
  drop_na(Descriptor)%>%
  mutate(Descriptor=factor(Descriptor,levels=c("Starting","Emerging","Building", "Flourishing")))%>%
  ggplot(aes(Descriptor, fill=year))+
  geom_bar(position=position_dodge(), width = 0.5)+
#  facet_wrap(vars(year))+
    labs(title=" ",
        x =" ", y = " Number of schools")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+

  stat_count(aes(y=..count..,label=..count..), 
             geom="text", 
             position=position_dodge(width=0.5), 
             size = 3,
             vjust=-0.5)+
    scale_y_continuous(limits = c(0, 25), breaks = seq(0, 20, 5))+
  scale_x_discrete(drop=FALSE)+
  scale_fill_manual(values=c("#c2b4ce","#943ae8"))

```

## Schools’ perceptions of performance

Schools were asked, using a 10-point scale, to assess their preparedness for and responsiveness to an event or situation negatively affecting their school both before and after listening to the audio scenario and answering the Part B section of the SAT.  These questions were included twice to understand if schools’ views would be impacted by their responses to the specific statements across the five Focus Areas; in other words – whether schools either overestimated or underestimated the extent to which their school is prepared to prevent and respond to disruptive events.

As can be seen from the figures below, schools were more likely to underestimate their preparedness and responsiveness than to overestimate them, both in 2021 but, even more so, in 2022.  In 2022, eight of the participating schools reported a higher score after completing the Part B questions than prior when asked about preparedness, whereas none of the schools reported a lower score.  In response to the question about responsiveness, seven of the schools reported a higher score after completing the Part B questions than prior, with just one school reporting a lower score.


`Font is very small – difficult to read`

`We’ll need to differentiate between the two questions and between the two years.  Could you please make the first chart (upper left) lighter shades of blue and the third chart (bottom left) darker shades of blue; and then the second chart (upper right) lighter shades of green and the fourth chart (bottom right) darker shades of green?`

**can you please confirm colours referring to item numbers?**

*Note that in the link, there are a total of 6 of these charts – 
3 for 2021 and 3 for 2022 – with different data.  Which are correct?`*

*Please exclude from analysis any schools that did not answer both the pre- and post questions.*

*Same issue with other pie charts – if “No change” comes first in the legend, the “No Change” pie piece should be on the left, for each of comprehension.*


2021: Items 13.1 and 19.1


```{r}

#----------
pre2021<-data2021%>%
  drop_na(pre_1, pre_2, post_8_1, post_8_2)%>%
  mutate(
    pre1_status=case_when(
      pre_1<post_8_1 ~"Post-score higher",
      pre_1==post_8_1 ~"No change",
      TRUE ~ "Pre-score higher"),
    pre2_status=case_when(
      pre_2<post_8_2 ~"Post-score higher",
      pre_2==post_8_2 ~"No change",
      TRUE ~ "Pre-score higher"),
    pre1_status=factor(pre1_status, levels=c("No change", "Pre-score higher","Post-score higher")),
    pre2_status=factor(pre2_status, levels=c("No change", "Pre-score higher","Post-score higher"))
  )


vals= count(pre2021, pre1_status)

plot_ly(data=count(pre2021, pre1_status), 
        labels = ~pre1_status, values = ~n, 
        type = 'pie',
        name="",
        sort=FALSE,
          marker = list(colors = c("#1f4e78", "#3c84c2", "#b7d1ea")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
  direction='clockwise',
  sort =FALSE,
rotation=200

        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)
```

2021: Items 13.2 and 19.2


```{r}

vals= count(pre2021, pre2_status)

plot_ly(data=count(pre2021, pre2_status), 
        labels = ~pre2_status, values = ~n, 
        type = 'pie',
        name="",
          marker = list(colors = c("#0d5404", "#3ca82e", "#93ea88")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
  direction='clockwise',
  sort =FALSE,
rotation=180
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)
```

---------

2022: Items 13.1 and 19.1


```{r}

#----------
pre2022<-data2022%>%
  drop_na(pre_1, pre_2, post_8_1, post_8_2)%>%
  mutate(
    pre1_status=case_when(
      pre_1<post_8_1 ~"Post-score higher",
      pre_1==post_8_1 ~"No change",
      TRUE ~ "Pre-score higher"),
    
    
    pre2_status=case_when(
      pre_2<post_8_2 ~"Post-score higher",
      pre_2==post_8_2 ~"No change",
      TRUE ~ "Pre-score higher"),
    pre1_status=factor(pre1_status, levels=c("No change", "Pre-score higher","Post-score higher")),
    pre2_status=factor(pre2_status, levels=c("No change", "Pre-score higher","Post-score higher"))
  )


vals= count(pre2022, pre1_status)

plot_ly(data=count(pre2022, pre1_status), 
        labels = ~pre1_status, values = ~n, 
        type = 'pie',
        name="",
          marker = list(colors = c("#1f4e78", "#3c84c2", "#b7d1ea")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
  direction='clockwise',
  sort =FALSE,
rotation=180
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)
```

2022: Items 13.2 and 19.2

```{r}

vals= count(pre2022, pre2_status)

plot_ly(data=count(pre2022, pre2_status), 
        labels = ~pre2_status, values = ~n, 
        type = 'pie',
        name="",
          marker = list(colors = c("#0d5404", "#3ca82e", "#93ea88")),
text = ~paste(
    "N = ", vals$n, "<br>", 
                 
                  round(n, digits = 0)
                   , "%"),
 textinfo = "text",
  textposition = 'outside',
  direction='clockwise',
  sort =FALSE,
rotation=180
        )%>%
layout(legend = list(orientation = 'h', xanchor = "center",  # use center of legend as anchor
                     x = 0.5),
         title=" ",
         uniformtext=list(minsize=12, mode='hide'),
         font=t)
```


### Part A Results

On average, these schools reported decreases from 2021 to 2022 in the Part A Domains, Effective school organisation and eSmart Curriculum, but an increase in the Domain, Effective teacher practices. They reported the same level of achievement for the Domains, Respectful and caring school; School plans, policies, and procedures; and Community partnerships.

In 2022, these school reported 100% achievement in the Domains, Effective teacher practices; Respectful and caring school; and School plans, politics, and procedures.  The lowest achievement was in the Domain, Effective school organisation.  This was also the Domain with the largest drop in achievement from 2021.

`Title cut off`

`Please correct category order (from left to right): Effective school organisation; School plans, policies, and procedures; Respectful and caring school; Effective teacher practices; eSmart curriculum;  Community partnerships`
`Please adjust the 100%s so they don’t overlap`


2021/2022:  Completed both years - Part A: average (mean) completion of eSmart action items - all schools by Domain)

```{r}
temp2021_same<-data2021[data2021$School %in% c(14, 16, 27, 33, 41, 38), ]
  
  
temp2021_same<-temp2021_same%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total)

names(temp2021_same) <- figa_categories

temp2021_same_f10<-temp2021_same%>%mutate(
  across(
    c(7:12),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:12))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2021")

#-----2022 - Part A

temp2022_same<-data2022[data2022$School %in% c(14, 16, 27, 33, 41, 38), ]


temp2022_same<-temp2022_same%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
total_pc,
parta1_total_pc,
parta2_total_pc,
parta3_total_pc,
parta4_total_pc,
parta5_total_pc,
parta_total)

names(temp2022_same) <- figa_categories

temp2022_same_f10<-temp2022_same%>%mutate(
  across(
    c(7:12),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:12))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2022")

temp2021_same_f10<-rbind(temp2021_same_f10, temp2022_same_f10)


temp2021_same_f10$Categories<-factor(temp2021_same_f10$Categories,
                            levels=c(
      "Effective school organisation",
      "School plans, policies, and procedures",
      "Respectful and caring school",
      "Effective teacher practices",
      "eSmart curriculum",
      "Community partnerships"))

temp2021_same_f10%>%
  ggplot(aes(x=Categories, y= Mean*100, fill=year))+
  geom_col(stat="identity", position=position_dodge(), width = 0.7)+
labs(title=" ",
        x =" ", y = " % assessed as completed")+
    scale_fill_grey(start = 0.8, end = 0.2)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
  
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20), expand = expansion(mult = 0.1))+
geom_text(aes(label = paste0(round(Mean*100),"%")), 
          position=position_dodge(width=0.7), 
          size = 2.7,
          vjust=-0.5)

```


Part B: results by Focus Area - SAME schools

```{r}
temp2021_same<-data2021[data2021$School %in% c(14, 16, 27, 33, 41, 38), ]

#-----2021 - Part B

temp2021_same_b<-temp2021_same%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor)

names(temp2021_same_b) <- figb_categories

temp2021_same_b<-temp2021_same_b[rowSums(is.na(temp2021_same_b[7:18])) != ncol(temp2021_same_b[7:18]), ] 

temp2021_same_f13n<-temp2021_same_b%>%mutate(
  across(
    c(7:16),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:11))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2021")

#-----2022 - Part B

temp2022_same<-data2022[data2022$School %in% c(14, 16, 27, 33, 41, 38), ]


temp2022_same_b<-temp2022_same%>% select(
  School,
  Sector,
  Type,
  SES,
  ADII,
  Metro,
  ds_data,
  ds_gateway,
  ds_reporting,
  ds_response,
  ds_climate,
  pre_1,
  pre_2,	
  post_8_1,
  post_8_2,
  ds_total,
  quadrant_results,	
  descriptor)

names(temp2022_same_b) <- figb_categories

temp2022_same_b<-temp2022_same_b[rowSums(is.na(temp2022_same_b[7:18])) != ncol(temp2022_same_b[7:18]), ] 

temp2022_same_f13n<-temp2022_same_b%>%mutate(
  across(
    c(7:16),
    ~ mean(.x, na.rm = TRUE)
))%>%
  select(c(7:11))%>%
  distinct()%>%
  pivot_longer(names_to="Categories",
               values_to="Mean",
               cols=everything())%>%
  mutate(year="2022")

temp_same_f13n<-rbind(temp2021_same_f13n, temp2022_same_f13n)
#

```
```{r}
#----- plot - part B

temp_same_f13n%>%
  ggplot(aes(x=Categories, y= Mean))+
  geom_col(width=0.5)+
  facet_wrap(vars(year))+
  facet_wrap(vars(year))+
    labs(title=" ",
        x =" ", y = " Score 0-80")+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+
  scale_x_discrete(labels = function(x) str_wrap(x, width = 5))+
  scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 20))+
geom_text(aes(label = round(Mean)), 
          position=position_dodge(width=0.7), vjust=-0.5, text=2.5)



temp_same_f13n%>%
  ggplot(aes(x=Categories, y= Mean, fill=year))+
  geom_col(stat="identity", position=position_dodge(), width=0.5)+
    labs(title="",
        x =" ", y = " Score 0-80")+
    scale_fill_grey(start = 0.8,
  end = 0.2)+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
    scale_x_discrete(labels = function(x) str_wrap(c("DATA", "GATEWAY BEHAVIOURS", "REPORTING", "RESPONSE", "SCHOOL CLIMATE*"), width = 5))+
  scale_y_continuous(limits = c(0, 90), breaks = seq(0, 80, 20))+
geom_text(aes(label = round(Mean)), 
          position=position_dodge(width=0.5), 
                      size = 3,
          vjust=-0.5)
```

The third I was hoping you could produce is identical to Fig 17 (but with 2021 and 2022 results combined into a single chart, as specified in my previous email) - but just for those six schools - 2021 vs. 2022

```{r}


temp2021_same_b$year<-"2021"
temp2022_same_b$year<-"2022"

temp_same_b<-rbind(temp2021_same_b, temp2022_same_b)


temp_same_b%>%
  drop_na(Descriptor)%>%
  mutate(Descriptor=factor(Descriptor,levels=c("Starting","Emerging","Building", "Flourishing")))%>%
  ggplot(aes(Descriptor, fill=year))+
  geom_bar(position=position_dodge(), width = 0.5)+
#  facet_wrap(vars(year))+
    labs(title=" ",
        x =" ", y = " Number of schools")+
  theme(

    legend.position="bottom",
    legend.title=element_blank(),
        
panel.grid.major = element_blank(), 
panel.grid.minor = element_blank(),
panel.background = element_blank(),

#axis.title.y=element_blank(),
#axis.text.y=element_blank(), 
#axis.ticks.y=element_blank(),

axis.ticks.x=element_blank(),
axis.line.x = element_line(colour = "black"))+
#    scale_x_discrete(labels = function(x) str_wrap(x, width = 10))+
    scale_x_discrete(drop=FALSE)+

  stat_count(aes(y=..count..,label=..count..), 
             geom="text", 
             position=position_dodge(width=0.5), 
             size = 3,
             vjust=-0.5)+
  scale_fill_manual(values=c("#c2b4ce","#943ae8"))
  
  
  


```

